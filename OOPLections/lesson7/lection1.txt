1)Введение
разделяй и властвуй
разбить на подсистемы так, чтобы работу каждой
из подсистем можно было рассматривать
и совершенствовать независимо от других
Правильный план - реализация только после абстракций
Абстракция - что делает?
Поведение - как делает?
Спецификация - набор правил, описывающих API
2)Класс и объект
Класс - чертеж(описание) сущности предметной области,
позволяющий выделить некоторые общие характеристики,
состояние и поведение, зависящее от состояния
Предметная область - множествоо всех предметов решаемой проблемы
Экземпляр класса - отдельный представитель класса,
имеющий КОНКРЕТНОЕ состояние и поведение
, которое полностью определяется описанием класса
Состояние -(поля и константы)
набор данных (полей, атрибутов, членов класса)
Поведение - (конструкторы и методы)
функции для работы с данными и выполнения полезной работы
ООП - объектно-ориентированное программирование
Парадигма (стиль, шаблон) разработки ПО, основными понятиями которой являются классы и объекты.
Говорят, что разработка в стиле ООп ведется с
использованием классов объектов,
которые обладают состояние и поведение, зависящим от этого состояния
@Overrride позволяет переопределять поведение методов до нас.
Перегрузка методов - описываем методы отличающиеся сигнатурой(набор типов).
Если мы меняем типы аргументов и\или их кол-во в функциях
public - можно вызвать везде
private - методы видимы только в этом классе
Переиспользование разных конструкторов
dry - написали код и подстраиваем его
/**
* Это жизнь
* @param meaning это смысл
*
*/ так писать комменты и при направлении на класс мы видим что есть что там
static - обращаться через имя типа
3)Наполнение
4)Концепты ООП
Инкапсуляция - это свойство системы,
позволяющее объединить данные и методы, работающие с ними в классе,
скрыв детали реализации и защитив от пользователя этого класса объектов
Наследование - свойство системы, позволяющее описать
новый класс на основе уже
существующего, с частично или полностью
заимствующейся функциональностью
Класс, от которого производится наследование,
называется базовым или родительским.
Новый класс - потомком, наследником или производным классом
protected - доступно в рамках текущего класса и в рамках всех классов наследнико
this - обращение к элементу созданному в классе
super - пойти в родительский класс и там что-то менять смотреть
class Magician extends BaseHero - расширяем класс новым функционалом
BaseHero - родительский класс
Magician - дочерний класс
Полиморфизм - свойство системы, использовать объекты с одинаековым
 интерфейсом
без информации о типе и внутренней структуре объекта
Использовать объектв вне зависисмости от его реализации
благодаря полиморфной переменной - это переменная
которая может принимать значения разных типов
в переменную базового класса можно положить переменную производного класса
5)Примеры
6)Итоги
сделать работу с точками в трехмерном пространстве
добавить в игру персонажа "лекарь"